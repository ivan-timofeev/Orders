name: CI/CD pipline
on:
 push:
   branches: ["main"]

jobs:
  test:
    name: "Build & Test .NET Project"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build
    - name: Test with the dotnet CLI
      run: dotnet test

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v3
    - name: Build docker image
      run: |
        docker build . \
        --file Orders/Dockerfile \
        --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/orders:latest
    - name: Login to YC Registry
      uses: docker/login-action@v3.0.0
      with:
        registry: cr.yandex
        username: json_key
        password: ${{ secrets.YC_KEYS }}
    - name: Push tag to YC Registry
      run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/orders:latest 
   
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
    - name: Deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/orders:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}
        revision-env: |
          ASPNETCORE_URLS=http://localhost:5001
